<?xml version="1.0" encoding="UTF-8" ?>
<book xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
<info>
<pubdate>Tue Apr 28 00:36:17 CEST 2020</pubdate>
<title>Arrowhead Profile Documentation</title>
<legalnotice><title></title><para></para></legalnotice>
<collab><org>
<orgname></orgname>
<orgdiv></orgdiv>
<uri></uri>
<address><alt></alt></address>
</org></collab></info>
<chapter xml:id="_19_0_3_219804d8_1587120005108_10462_44146">
<info><title>Types</title></info>
<table frame="all" pgwide="1" role="longtable">
<title></title>
<tgroup cols="2" align="left" colsep="1" rowsep="1">
<thead>
<row><entry>Name</entry><entry>Documentation</entry></row>
</thead>
<tbody>
<row><entry><para>SysD</para>
</entry><entry><para>The System Description (SysD) describes the outer interfaces of a system kind by defining its "black-box" structure in a service-oriented manner, i.e., focusing on the services it provides.

In this profile, SysDs are blocks having (proxy) ports on them, representing their service capacities. The shape of those services are provided by Service Descriptions (SD) typing the ports (cf. also the description of the SD stereotype).</para>
</entry></row>
<row><entry><para>SysDD</para>
</entry><entry><para>The System Design Description (SysDD) provides a white-box description, describing which black boxes the described system implements (by referring to one or more SysDs) and which components are used to implement the system.

In this profile, a SysDD might specialize a SysD. If additional behavioral specifications should be provided, those should reside inside a corresponding SysDD. The ports on a SysDD typically also specialize a port of the parent SysD, if there is one. This relation should be expressed by the SubsetOf dependency.</para>
</entry></row>
<row><entry><para>IDD</para>
</entry><entry><para>The Interface Design Description (IDD) provides implementational and technical details on how a service is actually provided.

Just as SysD ports are typed by SDs, SysDD ports should be typed by IDDs (conforming to the corresponding SysD-SysDD relations. Within an IDD, a service interface with input, output and return parameters can be modeled as operations, whose behavioral specifications then can be placed inside SysDDs.</para>
</entry></row>
<row><entry><para>SubsetOf</para>
</entry><entry><para></para>
</entry></row>
<row><entry><para>Device</para>
</entry><entry><para>The actual devices providing the physical platform for deploying a local cloud.

To be used in the future for connecting other modeling languages, e.g., hardware-oriented ontologies, with the present profile.</para>
</entry></row>
<row><entry><para>SD</para>
</entry><entry><para>The Service Description (SD) contains a general description of a service, without going into implementational details.

In the profile, SDs are used as types for SysD ports (but not for SysDD ports).</para>
</entry></row>
<row><entry><para>LocalCloud</para>
</entry><entry><para>The local cloud is a central notion of Arrowhead; a local cloud usually denotes a System of Systems maintained by some stakeholder, with the partaking systems and services fulfilling a "local" scope (which, of course, can still be complex). The notion of a local cloud also involves the Devices (cf. that stereotype) on which the systems and services are executed.</para>
</entry></row>
<row><entry><para>MetaDataEntry</para>
</entry><entry><para>Used to represent generic key-value pairs found in some data structures.</para>
</entry></row>
<row><entry><para>SecurityKind</para>
</entry><entry><para></para>
</entry></row>
<row><entry><para>DeployedSystem</para>
</entry><entry><para>DeployedSystems appear on Internal Block Diagrams, and are typed by SysDDs, thus, representing actual manifestations of systems. The connections between ports of DeployedSystems, in turn, might serve for expressing an ideal configuration of a local cloud.</para>
</entry></row>
<row><entry><para>SoSD</para>
</entry><entry><para>The System of Systems Description (SoSD) describes how a number of system definitions can be combined to fulfill user needs. Thus, this level of description only considers a collection of SysD elements and potentially their relations, while leaving the distribution of systems out of scope (cf. SoSDD for that topic).</para>
</entry></row>
<row><entry><para>SoSDD</para>
</entry><entry><para>The System of Systems Design Description (SoSDD) describes a deployed Arrowhead Cloud; thereby, it usually (1) refines a SoSD, providing a "white-box" view of it; and, therefore, (2) contains those SysDDs (System Design Descriptions) corresponding to the SysDs contained in the refined SoSD.</para>
</entry></row>
<row><entry><para>DeployedDevice</para>
</entry><entry><para></para>
</entry></row>
<row><entry><para>DeployedLocalCloud</para>
</entry><entry><para></para>
</entry></row>
<row><entry><para>DataSemantics</para>
</entry><entry><para>The DataSemantics stereotype shall be used for IDD parameters: its purpose is to declare the data model (i.e., a language, an ontology, a schema or similar) used for structuring parameter values.</para>
</entry></row>
<row><entry><para>HttpMethodKind</para>
</entry><entry><para></para>
</entry></row>
<row><entry><para>DeployedEntity</para>
</entry><entry><para>A DeployedEntity is a system, device or local cloud which represents an actual entity, thought to be physically and uniquely existent. So far, mostly systems are considered.

The identifier of any deployed entity is a string which (ideally) uniquely identifies that given entity in an SoS. For making the identifiers compatible with the rest of the Arrowhead ecosystem, it is highly advisable to use the following conventions:

System identifiers: _systemname._devicename._protocol._transport._domain

Device identifiers: _devicename._localcloudname._interface._mac?protocol._macaddress

Local cloud identifiers: _gatekeeper?system?name._InterCloudNegotiations. _protocol._transport._domain:port</para>
</entry></row>
</tbody>
</tgroup>
</table>
</chapter>
</book>